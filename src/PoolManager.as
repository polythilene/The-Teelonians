///////////////////////////////////////////////////////////
//  PoolManager.as
//  Macromedia ActionScript Implementation of the Class PoolManager
//  Generated by Enterprise Architect
//  Created on:      17-Jan-2010 7:09:03 PM
//  Original author: Kurniawan Fitriadi
///////////////////////////////////////////////////////////

package
{
	/**
	 * @author Kurniawan Fitriadi
	 * @version 1.0
	 * @created 17-Jan-2010 7:09:03 PM
	 */
	
	 
	import de.polygonal.core.*; 
	 
	public class PoolManager
	{
		static private var m_instance: PoolManager;
		
		private var m_pools:Array;
				
		/**
		 * 
		 * @param lock
		 */
	    public function PoolManager(lock:SingletonLock)
	    {
			m_pools = [];
	    }

	    /**
	     * 
	     * @param classType    classType
	     */
	    public function registerClass(classType:Object, initCount:int, factory:ObjectPoolFactory = null): void
	    {
			var id:String = classType.toString();
			if ( m_pools[id] == null )
			{
				var pool:ObjectPool = new ObjectPool(true);
				
				if( factory )
					pool.setFactory(factory);
				
				pool.allocate(initCount, Class(classType));
				
				m_pools[id] = pool;
			}
	    }
		
		/**
	     * 
	     * @param classType    classType
	     */
	    public function borrowItem(classType:Object) : *
	    {
			var id:String = classType.toString();
			
			/* attempt to find created list, if the list is not found then create one */
			
			if ( m_pools[id] )
			{
				return m_pools[id].object;
			}
			else
			{
				m_pools[id] = new ObjectPool(true);
				m_pools[id].allocate(1, classType);
				
				return m_pools[id].object;
			}
	    }

	    /**
	     * 
	     * @param ClassType
	     * @param item    item
	     */
	    public function recycleItem(ClassType:Object, item:*): void
	    {
			var id:String = ClassType.toString();
			
			/* attempt to find created list, if the list is not found then create one */
			
			if ( m_pools[id] )
			{
				m_pools[id].object = item;
			}
			else
			{
				m_pools[id] = new ObjectPool(true);
				m_pools[id].object = item;
			}
		}
		
		public function getWasteCount(ClassType:Object):int
		{
			var id:String = ClassType.toString();
			return m_pools[id].wasteCount;
		}
		
		public function getUsageCount(ClassType:Object):int
		{
			var id:String = ClassType.toString();
			return m_pools[id].usageCount;
		}

	    static public function getInstance(): PoolManager
	    {
			if( m_instance == null ){
            	m_instance = new PoolManager( new SingletonLock() );
            }
			return m_instance;
	    }

	}//end PoolManager

}

class SingletonLock{}