///////////////////////////////////////////////////////////
//  CEnemyTeelos.as
//  Macromedia ActionScript Implementation of the Class CEnemyTeelos
//  Generated by Enterprise Architect
//  Created on:      11-Des-2010 22:24:55
//  Original author: poof!
///////////////////////////////////////////////////////////

package com.game
{
	import com.game.CBaseTeelos;
	import com.game.ai.*;
	import flash.display.DisplayObjectContainer;
	import math.OpMath;
	import com.greensock.TweenMax;
	import com.greensock.easing.*;

	/**
	 * @author poof!
	 * @version 1.0
	 * @created 11-Des-2010 22:24:55
	 */
	public class CEnemyTeelos extends CBaseTeelos
	{
		protected var m_dropChance:int;
		protected var m_dropMin:int;
		protected var m_dropMax:int;
		
		private var m_prepareSplat:Boolean;
		private var m_splat:Boolean;
		private var m_splatCounter:int;
		
		private var m_lastDamageSource:CBaseTeelos;
		private var m_hitRun:Boolean;
		
		public function CEnemyTeelos(){

		}
		
		override public function initialize():void 
		{
			super.initialize();
			m_baseSpeed = 0.07;
			m_dropChance = 50;
			m_dropMin = 1;
			m_dropMax = 3;
			m_splat = false;
			m_prepareSplat = false;
			m_splatCounter = 0;
			m_speedMultiplier = 0.7;
		}
		
		override public function onCreate(lane:int, xPos:int, container:DisplayObjectContainer):void 
		{
			super.onCreate(lane, xPos, container);
			
			m_sprite.scaleX = -1;		// flip for enemy sprites
			m_sprite.scaleY = 1;
			m_sprite.x = xPos;
			animationPlay();
			
			m_splat = false;
			m_splatCounter = 0;
			m_level = 1;
			m_hitRun = false;
			m_lastDamageSource = null;
			
			setDestination(0);
			
			changeAIState( AIState_Enemy_Idle.getInstance() );
		}
		
		override public function onRemove():void 
		{
			super.onRemove();
		}
		
		override public function attack(target:CBaseTeelos):void 
		{
			super.attack(target);
			
			if ( !isCoolingDown() )
			{
				m_cooldownCounter = 0;
				
				// melee unit cast direct hit
				if ( unitClass == UNITCLASS.INFANTRY || unitClass == UNITCLASS.CAVALRY || unitClass == UNITCLASS.SIEGE )
				{
					var bonus:int = ( m_counterClass == target.unitClass ) ? m_counterBonus : 0;
					target.damage( attackDamage + m_level + bonus, this );
				}
			}
		}
		
		override public function damage(value:int, source:CBaseTeelos):void 
		{
			super.damage(value, source);
			if( value > 0 )
				m_lastDamageSource = source;
		}
		
		override public function onKilled():void 
		{
			super.onKilled();
			
			if( m_lastDamageSource != null && m_lastDamageSource.isActive() && 
				!m_lastDamageSource.isDead() && m_lastDamageSource.getLevel() >= m_level )
			{
				CPlayerTeelos(m_lastDamageSource).addKillCount();
			}
			
			if ( m_currLife <= 0 )
			{
				GlobalVars.KILL_SCORE += 50 * m_level;
				State_GameLoop.getInstance().invalidateScore();
			}
			
			var value:int = OpMath.randomRange( m_dropMin, m_dropMax );
			if ( value > 0 )
			for ( var i:int = 0; i < value; i++ )
			{
				var offsetX:int = x + OpMath.randomRange( -30, 30 );
				var offsetY:int = y - OpMath.randomRange( 50, 100 );
				ItemManager.getInstance().add( CItem_SilverCoin, m_container.stage, offsetX, offsetY, y );
			}
		}
			
		override public function getFaction():int
		{
			return FACTION.ENEMY;
		}
		
		public function splat():void
		{
			
			m_dead = true;
			
			m_splatCounter = 0;
			m_prepareSplat = true;
			m_container.setChildIndex(m_sprite, 0);
		}
		
		override public function update(elapsedTime:int):void 
		{
			super.update(elapsedTime);
			
			if ( isDestinationReached() && !(this is CTeeloPoztazark) && 
				 !(this is CTeeloBalistatoz) && !(this is IInvulnerable) && 
				 !(this is CTeeloTeegor) && !(this is CTeeloWeezee) )
			{
				// game lost
				State_GameLoop.getInstance().displayLostScreen();
			}
			
			if ( m_active && m_prepareSplat )
			{
				m_splatCounter += elapsedTime;
				
				if ( m_splatCounter > 900 )
				{
					SoundManager.getInstance().playSFX("SN19");
					TweenMax.to( m_sprite, 1, { scaleY:0.4, ease:Bounce.easeOut } );
					m_splat = true;
					m_splatCounter = 0;
					m_prepareSplat = false;
					animationStop();
					onKilled();
				}
			}
			
			if ( m_active && m_splat )
			{
				m_splatCounter += elapsedTime;
				
				if ( m_splatCounter > 5000 )
				{
					m_active = false;
				}
			}
		}
		
		override public function animationHit():void 
		{
			changeAIState( AIState_Enemy_Hit.getInstance() );
		}
		
		public function get hitRun():Boolean
		{
			return m_hitRun;
		}
		
		public function set hitRun(value:Boolean):void
		{
			m_hitRun = value;
		}
		
		override public function setLevel(value:int):void 
		{
			super.setLevel(value);
			if ( m_sprite.rank != null )
			{
				m_sprite.rank.gotoAndStop(value);
			}
		}
		
	}//end CEnemyTeelos

}