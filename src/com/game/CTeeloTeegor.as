///////////////////////////////////////////////////////////
//  CTeeloTeegor.as
//  Macromedia ActionScript Implementation of the Class CTeeloBigBoss
//  Generated by Enterprise Architect
//  Created on:      20-Jan-2011 4:07:04 PM
//  Original author: Kurniawan Fitriadi
///////////////////////////////////////////////////////////

package com.game
{
	import com.game.ai.AIState;
	import com.game.ai.AIState_Teegor_Enter;
	import com.game.CEnemyTeelos;
	import com.game.fx.CEffect_Summon;
	import flash.display.DisplayObjectContainer;
	import flash.display.MovieClip;
	import com.greensock.TweenMax;
	import math.OpMath;

	/**
	 * @author Kurniawan Fitriadi
	 * @version 1.0
	 * @created 20-Jan-2011 4:07:04 PM
	 */
	public class CTeeloTeegor extends CEnemyTeelos
	{
		private const ATTACK_SUMMON:int = 0;
		private const ATTACK_ICE:int 	= 1;
		private const ATTACK_FIRE:int 	= 2;
		private const ATTACK_RANDOM:int	= 3;
		
		private const ATTACK_DAMAGE_FIRE:int	=  50;		
		private const ATTACK_DAMAGE_ICE:int		=  15;		
				
		private var m_attackCount:int = 0;
		private var m_waitTime:int = 0;
		
		private var m_currLane:int;
		private var m_attackQueue:Array = [ ATTACK_FIRE, ATTACK_FIRE, ATTACK_ICE, ATTACK_SUMMON, ATTACK_RANDOM ];
		
		
		public function CTeeloTeegor(){

		}
		
		override public function initialize():void 
		{
			super.initialize();
			
			m_attack = 0;
			m_defense = 10;
			m_maxLife = 500;
			m_unitClass = UNITCLASS.MAGE;
			m_counterClass = UNITCLASS.NONE;
			m_counterBonus = 0;
			m_baseSpeed = 0.05;
			m_dropMin = 20;
			m_dropMax = 20;
			m_baseCooldownTime = 5000;
		}
		
		override public function onCreate(lane:int, xPos:int, container:DisplayObjectContainer):void 
		{
			super.onCreate(lane, xPos, container);
			m_attackCount = 0;
			m_waitTime = 0;
			m_currLane = 2;
			changeAIState(AIState_Teegor_Enter.getInstance());
			
			GlobalVars.BOSS_INSTANCE = this;
		}
		
		override public function onRemove():void 
		{
			GlobalVars.BOSS_INSTANCE = null;
			TweenMax.killTweensOf(m_sprite);
			
			var currLaneLayer:MovieClip = State_GameLoop.getInstance().getLaneLayer(m_currLane);	
			currLaneLayer.removeChild(m_sprite);
	    }
		
		override protected function createSprite():void 
		{
			super.createSprite();
			m_sprite = new mcTeelo_BigBoss();
		}
		
		override public function animationHit():void 
		{
			// TODO: write animation method here
		}
		
		public function increaseAttackCount():void
		{
			m_attackCount++;
		}
		
		public function getAttackCount():int
		{
			return m_attackCount;
		}
		
		public function resetAttackCount():void
		{
			m_attackCount = 0;
		}
		
		public function getWaitTime():int
		{
			return m_waitTime;
		}
		
		public function updateWaitTime(elapsedTime:int):void
		{
			m_waitTime += elapsedTime;
		}
		
		public function resetWaitTime():void
		{
			m_waitTime = 0;
		}
		
		override public function changeAIState(newState:AIState):void 
		{
			super.changeAIState(newState);
			trace("AI:", newState.getStateName());
		}
		
		public function attackArea():void
		{
			m_cooldownCounter = 0;
			animationReset();
				
			var attackID:int = m_attackQueue.shift();
			m_attackQueue.push(attackID);
				
			attackByID(attackID);
		}
		
		private function attackByID(attackID:int):void
		{
			switch(attackID)
			{
				case ATTACK_SUMMON:	
						attackSummon(); 	 
						break;
				case ATTACK_ICE:	
						attackIce(); 
						break;
				case ATTACK_FIRE:	
						attackFire(); 
						break;
				case ATTACK_RANDOM: 
						var dice:int = OpMath.randomNumber(30);
						if( dice > 20 )
							attackIce();
						else if ( dice > 10 && dice < 20 )	
							attackFire();
						else
							attackSummon();
						break;
			}
		}
		
		private function attackFire():void
		{
			var player:Array = NPCManager.getInstance().getListOfUnit(m_currLane, NPCManager.FACTION_PLAYER);
			var hitIndex:int = Math.floor( OpMath.randomRange(0, player.length - 1) );
			var hitTarget:CBaseTeelos = player[hitIndex];
				
			if ( hitTarget && !(hitTarget is CTeeloLastBarricade)  )
			{
				MissileManager.getInstance().launch( CMissileFireball_Teegor, m_container, m_sprite.x, m_sprite.y - 45, 
													 1, getFaction(), m_currLane,
													 ATTACK_DAMAGE_FIRE, m_counterClass, m_counterBonus, m_level, m_detectInvisible, this,
													 {target:hitTarget, groundLevel:y } );
			}
		}
		
		private function attackIce():void
		{
			var player:Array = NPCManager.getInstance().getListOfUnit(m_currLane, NPCManager.FACTION_PLAYER);
			var hitIndex:int = Math.floor( OpMath.randomRange(0, player.length - 1) );
			var hitTarget:CBaseTeelos = player[hitIndex];
				
			if ( hitTarget && !(hitTarget is CTeeloLastBarricade)  )
			{
				MissileManager.getInstance().launch( CMissileIceBall_Teegor, m_container, m_sprite.x, m_sprite.y - 45, 
													 1, getFaction(), m_currLane,
													 ATTACK_DAMAGE_ICE, m_counterClass, m_counterBonus, m_level, m_detectInvisible, this,
													 {target:hitTarget, groundLevel:y } );
			}
		}
		
		private function attackSummon():void
		{
			var dice:int = Math.floor(OpMath.randomNumber(4))
			
			switch( dice )
			{
				case 0:
					spawnUnit(CTeeloUztan, 15);
					spawnUnit(CTeeloUmaz, 5);
					spawnUnit(CTeeloTeeclon, 2);
					break;
				case 1:	
					spawnUnit(CTeeloUztan, 10);
					spawnUnit(CTeeloRazark, 2);
					spawnUnit(CTeeloCaplozton, 3);
					spawnUnit(CTeeloRammer, 1);
					break;
				case 2:	
					spawnUnit(CTeeloPoztazark, 1);
					spawnUnit(CTeeloUdizark, 2);
					spawnUnit(CTeeloCroztan, 8);
					break;
				default:	
					spawnUnit(CTeeloUztan, 20);
					spawnUnit(CTeeloHestaclan, 2);
					spawnUnit(CTeeloBalistatoz, 1);
					break;	
			}
		}
		
		private function spawnUnit(unitClass:Object, count:int = 1):void
		{
			for ( var i:int = 0; i < count; i++ )
			{
				var offset:int = OpMath.randomNumber(150);
				var lane:int = Math.floor(OpMath.randomNumber(5));
				
				ParticleManager.getInstance().add(CEffect_Summon, x, y);
				var npc:CBaseTeelos = NPCManager.getInstance().add(unitClass, lane, 850 + offset, State_GameLoop.getInstance().getLaneLayer(lane));	
				
				var level:int = Math.floor(OpMath.randomNumber(3)) + 1;
				npc.setLevel( level );
			}
		}
		
		public function changeLane():void
		{
			var currLaneLayer:MovieClip = State_GameLoop.getInstance().getLaneLayer(m_currLane);	
			currLaneLayer.removeChild(m_sprite);
			
			m_currLane = Math.floor(OpMath.randomNumber(5));
			m_sprite.y = State_GameLoop.getInstance().getLaneYPos(m_currLane);
			
			currLaneLayer = State_GameLoop.getInstance().getLaneLayer(m_currLane);	
			currLaneLayer.addChild(m_sprite);
		}

	}//end CTeeloBigBoss

}